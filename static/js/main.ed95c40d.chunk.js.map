{"version":3,"sources":["components/Table/index.js","components/Search/index.js","components/Location/index.js","components/CurrentWeather/index.js","components/Forecast/index.js","components/Title/index.js","components/NotFound/index.js","container/HomeContainer/index.jsx","components/Splash/index.jsx","container/SplashContainer/index.jsx","contants/index.js","App.js","reportWebVitals.js","index.js"],"names":["Table","showResult","this","props","className","highestTemp","wind","sunrise","lowestTemp","humidity","sunset","React","Component","Search","handleInputChange","e","setState","value","target","handleSearchCity","preventDefault","state","onHanldeSearch","onSubmit","icon","faSearch","type","placeholder","onChange","Location","weather","city","country","day","CurrentWeather","temp","main","weatherIcon","faBolt","faCloudRain","faCloudShowersHeavy","faSnowflake","faSun","faCloud","faSmog","Forecast","forecast","map","item","iconUrl","dt_txt","slice","src","alt","Math","floor","dt","Title","NotFound","faFrown","HomeContainer","data","error","onSubmitSearch","Fragment","Date","sys","toLocaleTimeString","d","getDay","getDate","getMonth","weatherInfo","name","description","temp_max","temp_min","clouds","all","speed","list","Splash","id","SplashContainer","API_KEY","App","useState","setData","setError","loading","setLoading","useEffect","a","APIkey","APP_SECERT","weatherUrl","forecastUrl","fetch","then","resWeather","resForecast","ok","json","setTimeout","console","log","getWeather","Error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed95c40d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Table.css';\r\n\r\nclass Table extends React.Component {\r\n    render() {\r\n        const { showResult } = this.props;\r\n        return (\r\n            <div className=\"table_weather\">\r\n                <div className=\"table_weather_item\">\r\n                    <h4 className=\"info\">{showResult.highestTemp}&#176;C</h4>\r\n                    <span className=\"info_label\">Hight</span>\r\n                </div>\r\n                <div className=\"table_weather_item\">\r\n                    <h4 className=\"info\">{showResult.wind}mph</h4>\r\n                    <span className=\"info_label\">Wind</span>\r\n                </div>\r\n                <div className=\"table_weather_item\">\r\n                    <h4 className=\"info\">{showResult.sunrise}</h4>\r\n                    <span className=\"info_label\">Sunrise</span>\r\n                </div>\r\n                <div className=\"table_weather_item\">\r\n                    <h4 className=\"info\">{showResult.lowestTemp}&#176;C</h4>\r\n                    <span className=\"info_label\">Low</span>\r\n                </div>\r\n                <div className=\"table_weather_item\">\r\n                    <h4 className=\"info\">{showResult.humidity}%</h4>\r\n                    <span className=\"info_label\">Humidity</span>\r\n                </div>\r\n                <div className=\"table_weather_item\">\r\n                    <h4 className=\"info\">{showResult.sunset}</h4>\r\n                    <span className=\"info_label\">Sunset</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\nimport './Search.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Search extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n        }\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({\r\n            value: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSearchCity = (e) => {\r\n        e.preventDefault();\r\n        const { value } = this.state;\r\n        this.props.onHanldeSearch(value);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { value } = this.state;\r\n        return (\r\n            <div className=\"search_input\">\r\n                <form onSubmit={this.handleSearchCity} className=\"search-form\">\r\n                    <FontAwesomeIcon icon={faSearch} className=\"icon_search\" />\r\n                    <input type=\"text\"\r\n                        placeholder=\"Enter city\"\r\n                        value={value}\r\n                        onChange={this.handleInputChange}></input>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport './Location.css';\r\n\r\nclass Location extends React.Component{\r\n    render(){\r\n        const { city, country, day }  = this.props.weather;\r\n        return(\r\n            <div className=\"location_wrapper\">\r\n                <h2 className=\"location\">{city}, {country}</h2>\r\n                <span className=\"date_time\">{day}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Location;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faCloud,\r\n  faBolt,\r\n  faCloudRain,\r\n  faCloudShowersHeavy,\r\n  faSnowflake,\r\n  faSun,\r\n  faSmog,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './CurrentWeather.css';\r\n\r\n\r\nclass CurrentWeather extends React.Component{\r\n    render(){\r\n        const { temp, main } = this.props.weather;\r\n        \r\n        let weatherIcon = null;\r\n\r\n        if (main === 'Thunderstorm') {\r\n          weatherIcon = <FontAwesomeIcon icon={faBolt} className=\"weather-icon\"/>;\r\n        } else if (main === 'Drizzle') {\r\n          weatherIcon = <FontAwesomeIcon icon={faCloudRain} className=\"weather-icon\"/>;\r\n        } else if (main === 'Rain') {\r\n          weatherIcon = <FontAwesomeIcon icon={faCloudShowersHeavy} className=\"weather-icon\"/>;\r\n        } else if (main === 'Snow') {\r\n          weatherIcon = <FontAwesomeIcon icon={faSnowflake} className=\"weather-icon\"/>;\r\n        } else if (main === 'Clear') {\r\n          weatherIcon = <FontAwesomeIcon icon={faSun} className=\"weather-icon\"/>;\r\n        } else if (main === 'Clouds') {\r\n          weatherIcon = <FontAwesomeIcon icon={faCloud} className=\"weather-icon\"/>;\r\n        } else {\r\n          weatherIcon = <FontAwesomeIcon icon={faSmog} className=\"weather-icon\"/>;\r\n        }\r\n\r\n        return(\r\n            <div className=\"current_weather\">\r\n                {weatherIcon}\r\n                <div className=\"temperature_wrapper\">\r\n                <h4 className=\"temperature\">{temp}°</h4>\r\n                <span className=\"small_label\">{main }</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CurrentWeather;","import React from 'react';\r\nimport './Forecast.css';\r\n\r\nclass Forecast extends React.Component {\r\n    render() {\r\n        const { forecast } = this.props;\r\n        return (\r\n            <div>\r\n                <span className=\"forecast_title\">Forecast</span>\r\n                <div className=\"forecast_wrapper\">\r\n                    {\r\n                        forecast.map((item) => {\r\n                            const iconUrl = `https://openweathermap.org/img/w/${item.weather[0].icon}.png`;\r\n                            return (\r\n                                <div className=\"forecast_item\" key={item.dt}>\r\n                                    <h4 className=\"forecast_date\">{item.dt_txt.slice(5, 7)}.{item.dt_txt.slice(8, 10)}</h4>\r\n                                    <span className=\"forecast_time\">{item.dt_txt.slice(11, 13) * 1}:00</span>\r\n                                    <img src={iconUrl} className=\"forecast_image\" alt=\"not found\"></img>\r\n                                    <span className=\"temperature\">{Math.floor(item.main.temp * 1) / 1}°</span>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Forecast;","import React from 'react';\r\nimport './Title.css';\r\n\r\nclass Title extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"app_name\">\r\n                <p className=\"title\">WEATHER APP</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFrown } from '@fortawesome/free-solid-svg-icons';\r\nimport './NotFound.css';\r\n\r\n\r\nclass NotFound extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"notfound_wrapper\">\r\n            <div className=\"notfound\">\r\n                 <FontAwesomeIcon icon={faFrown} className=\"notfound_icon\" />\r\n                 <p className=\"notfound_text\">Sorry, the specified city was not found...</p>\r\n            </div>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport Table from './../../components/Table';\r\nimport Search from './../../components/Search';\r\nimport Location from './../../components/Location';\r\nimport CurrentWeather from './../../components/CurrentWeather';\r\nimport Forecast from './../../components/Forecast';\r\nimport Title from './../../components/Title';\r\nimport './HomeContainer.css'\r\nimport NotFound from '../../components/NotFound';\r\n\r\n\r\nfunction HomeContainer(props) {\r\n    const { data: { weather, forecast }, error ,  onSubmitSearch } = props;\r\n\r\n    const onHanldeSearch = (city) => {\r\n        onSubmitSearch(city)\r\n    }\r\n\r\n    if(error){\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"app\">\r\n                    <Title />\r\n                    <Search onHanldeSearch={onHanldeSearch}/>\r\n                    <NotFound />\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const sunset = new Date(weather.sys.sunset * 1000).toLocaleTimeString().slice(0, 5);\r\n    const sunrise = new Date(weather.sys.sunrise * 1000).toLocaleTimeString().slice(0, 5);\r\n\r\n    var d = new Date();\r\n\r\n    var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    var day = days[d.getDay()] + ' ' + d.getDate() + ' ' + months[d.getMonth()];\r\n\r\n    const weatherInfo = {\r\n        city: weather.name,\r\n        country: weather.sys.country,\r\n        description: weather.weather[0].description,\r\n        main: weather.weather[0].main,\r\n        temp: weather.main.temp,\r\n        highestTemp: weather.main.temp_max,\r\n        lowestTemp: weather.main.temp_min,\r\n        sunrise,\r\n        sunset,\r\n        day,\r\n        clouds: weather.clouds.all,\r\n        humidity: weather.main.humidity,\r\n        wind: weather.wind.speed,\r\n        forecast: forecast.list\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"app\">\r\n                <Title />\r\n                <Search onHanldeSearch={onHanldeSearch}/>\r\n                <Location weather={weatherInfo} />\r\n                <div className=\"box\">\r\n                    <CurrentWeather weather={weatherInfo} />\r\n                    <Table showResult={weatherInfo} />\r\n                </div>\r\n                <Forecast forecast={weatherInfo.forecast} />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default HomeContainer;","import React from 'react';\r\nimport './splash.css';\r\n\r\nfunction Splash(props) {\r\n    return (\r\n        <div className=\"splash-container\">\r\n           <div id=\"loader\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Splash;","import React from 'react';\r\nimport Splash from './../../components/Splash';\r\n\r\nfunction SplashContainer(props) {\r\n    return (\r\n       <Splash />\r\n    );\r\n}\r\n\r\nexport default SplashContainer;","export const API_KEY = \"e2bee66899f03135614a43f9939a5fcd\";\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport HomeContainer from './container/HomeContainer';\r\nimport SplashContainer from './container/SplashContainer';\r\nimport * as APP_SECERT from './contants/index';\r\n\r\n\r\nfunction App(props) {\r\n\r\n  const [data, setData] = useState({\r\n    weather: '',\r\n    forecast: ''\r\n  });\r\n\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getWeather = async (city) => {\r\n      try {\r\n        const APIkey = APP_SECERT.API_KEY;\r\n        const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${APIkey}&units=metric`;\r\n        const forecastUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&APPID=${APIkey}&units=metric`;\r\n\r\n        const resWeather = await fetch(weatherUrl).then();\r\n        const resForecast = await fetch(forecastUrl);\r\n\r\n        if(!resWeather.ok || !resForecast.ok){\r\n            setError('Error when fetch data')\r\n        }\r\n        const weather = await resWeather.json();\r\n        const forecast = await resForecast.json();\r\n\r\n        setData({\r\n          weather: weather,\r\n          forecast: forecast\r\n        })\r\n\r\n        setTimeout(() => {\r\n          setLoading(false);\r\n        }, 3000)\r\n      } catch (err) {\r\n        setError(err);\r\n        console.log('error: ', err);  \r\n      }\r\n    }\r\n    getWeather('ho chi minh');\r\n  }, []);\r\n\r\n\r\n  const onSubmitSearch = async (city) => {\r\n    try {\r\n      const APIkey = APP_SECERT.API_KEY;\r\n      const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${APIkey}&units=metric`;\r\n      const forecastUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&APPID=${APIkey}&units=metric`;\r\n\r\n      const resWeather = await fetch(weatherUrl);\r\n      const resForecast = await fetch(forecastUrl);\r\n\r\n      if(!resWeather.ok || !resForecast.ok){\r\n        setError(true);\r\n        throw new Error('Tap doesn\\'t exists', 404);\r\n      }\r\n\r\n      const weather = await resWeather.json();\r\n      const forecast = await resForecast.json();\r\n\r\n      setData({\r\n        weather: weather,\r\n        forecast: forecast\r\n      })\r\n        setError(false);\r\n    } catch (err) {\r\n      setError(err);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading ? <SplashContainer /> : <HomeContainer data={data} onSubmitSearch={onSubmitSearch} error = {error} />}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}